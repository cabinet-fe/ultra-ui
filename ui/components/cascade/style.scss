@use '../../styles/mixins' as m;
@use '../../styles/functions' as fn;
@use '../../styles/vars';

// 方便拼接
$root-name: cascade;

@include m.b($root-name) {
  width: 100%;
  position: relative;

  @include m.e(content-filter) {
    border-bottom: fn.use-var(border);
  }

  @include m.e(options) {
    display: flex;
    max-height: 180px;

  }

  @include m.e(options-item) {
    max-height: 180px;
    position: absolute;
    background: fn.use-var(bg, color-top);
    border: fn.use-var(border);
    border-radius: fn.use-var(radius, default);
    top: 0;
    left: 0;
  }

  @include m.size using ($size) {
    padding: fn.use-var(gap, $size);
  }

  @include m.is(disabled) {
    @include m.bem($root-name, arrow) {
      color: fn.use-var(text-color, disabled);
    }
  }

  @include m.e(option) {
    cursor: pointer;
    margin: 2px 0;
    user-select: none;
    @include m.flex($display: flex, $align: center, $justify: space-between);

    &:hover {
      background-color: fn.use-var(color, primary, light-9);
    }

    @include m.is(selected) {
      background-color: fn.use-var(color, primary, light-3);
      color: fn.use-var(text-color, white);
    }
  }

  @include m.e(ripple) {
    background-color: fn.use-var(color, primary, light-7);
    opacity: 0.5;
  }

  @include m.e(empty) {
    color: fn.use-var(text-color, main);
  }

  @include m.e(panel) {
    @include m.size using ($size) {
      @include m.bem($root-name, content-filter) {
        padding: calc(fn.use-var(gap, $size) / 2) fn.use-var(gap, $size);
      }

      @include m.bem($root-name, options) {
        padding: calc(fn.use-var(gap, $size) / 2) fn.use-var(gap, $size);
      }

      @include m.bem($root-name, option) {
        padding: 0 fn.use-var(gap, $size);
        border-radius: fn.use-var(radius, $size);
        height: fn.use-var(form-component-height, $size);
        line-height: fn.use-var(form-component-height, $size);
      }

      @include m.bem($root-name, empty) {
        height: fn.use-var(form-component-height, $size);
        line-height: fn.use-var(form-component-height, $size);
        padding: 0 fn.use-var(gap, $size);
      }
    }
  }
}