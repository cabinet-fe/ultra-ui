@use '../../styles/mixins' as m;
@use '../../styles/functions' as fn;
@use '../../styles/vars';
@use 'sass:map';

// 方便拼接
$root-name: menu;

@include m.b($root-name) {
  display: flex;
  flex-direction: column;
  user-select: none;
  transition: max-width 0.35s ease;
  max-width: 1980px;

  @include m.e(sub) {
    width: 100%;
    cursor: pointer;
    color: #3D3D3D;

    @include m.is(disabled) {
      color: fn.use-var(text, color, disabled);
      cursor: not-allowed;
    }
  }

  @include m.e(item) {
    cursor: pointer;
    color: #666666;

    @include m.is(disabled) {
      color: fn.use-var(text, color, disabled);
      cursor: not-allowed;
    }
  }

  @include m.size using ($size) {
    font-size: fn.use-var('font-size', title, $size);

    @include m.bem($root-name, sub) {
      position: relative;

      &--title {
        padding: map.get(vars.$gap, $size) * 1.8;
        margin: map.get(vars.$gap, $size) * 0.4 map.get(vars.$gap, $size);
        border-radius: map.get(vars.$border-radius, $size) * 4;

        @include m.is(active) {
          background-color: fn.use-var(color, primary, 'light-7');
          color: fn.use-var(color, primary, 'light-1');

          &:hover {
            background-color: fn.use-var(color, primary, 'light-7');
          }
        }

        &:hover {
          background-color: fn.use-var(color, primary, 'light-9');
        }
      }

      &--icon {
        margin-right: fn.use-var(gap, $size);
        font-size: map.get(vars.$font-size-main, $size) * 1.4;
        vertical-align: text-top;
      }

      &--arrow {
        transition: transform 0.35s;
        margin-left: 6px;
        position: absolute;
        right: map.get(vars.$gap, $size) * 2.8;
        font-size: map.get(vars.$font-size-main, $size) * 1.4;
      }

      &--item {}

    }

    @include m.bem($root-name, item) {
      padding: map.get(vars.$gap, $size) * 1.8;
      margin: map.get(vars.$gap, $size) * 0.4 map.get(vars.$gap, $size);
      border-radius: map.get(vars.$border-radius, $size) * 4;

      &--icon {
        margin-right: fn.use-var(gap, $size);
        font-size: map.get(vars.$font-size-main, $size) * 1.4;
        vertical-align: text-top;
      }

      @include m.is(active) {
        background-color: fn.use-var(color, primary, 'light-7');
        color: fn.use-var(color, primary, 'light-1');

        &:hover {
          background-color: fn.use-var(color, primary, 'light-7');
        }
      }

      &:hover {
        background-color: fn.use-var(color, primary, 'light-9');
      }
    }
  }
}

.#{$root-name}-expand-enter-active {
  transition: all 0.35s cubic-bezier(.85, .2, .83, .67);
}

.#{$root-name}-expand-leave-active {
  transition: all 0.35s cubic-bezier(.17, .69, .55, .84);
}

.#{$root-name}-expand-enter-from,
.#{$root-name}-expand-leave-to {
  opacity: 0;
  max-height: 0px !important;
}