@use '../../styles/mixins' as m;
@use '../../styles/functions' as fn;
@use '../../styles/vars';
@use 'sass:map';

// 方便拼接
$root-name: menu;

@include m.b($root-name) {
  padding: 4px 8px;
  user-select: none;

  @include m.e(item, sub-content) {
    cursor: pointer;
    gap: 4px;
    padding: 0 8px;
    transition: background-color 0.25s;
    @include m.flex;

    &:hover {
      background-color: fn.use-var(color, primary, light-9);
    }

    @include m.is(active) {
      background-color: fn.use-var(color, primary, light-7);
    }
  }

  @include m.e(ripple) {
    background-color: fn.use-var(color, primary);
    opacity: 0.1;
  }

  @include m.e(item-title, sub-title) {
    flex-grow: 1;
  }

  // @include m.e(collapsed-item) {
  //   width: 0;
  //   height: 0;
  //   overflow: hidden;
  //   visibility: hidden;
  //   display: inline-block;
  // }

  @include m.e(sub-expand, item-expand, sub-icon, item-icon) {
    flex-shrink: 0;
  }

  @include m.e(sub-list) {
    overflow: hidden;
  }

  @include m.e(sub-expand) {
    transition: transform 0.25s;

    @include m.is(expanded) {
      transform: rotate(90deg);
    }
  }

  @include m.size using ($size) {
    font-size: fn.use-var(font-size-main, $size);

    @include m.bem($root-name, (item, sub-content)) {
      height: fn.use-var(menu-height, $size);
      border-radius: calc(fn.use-var(radius, $size) * 2);
    }

    @include m.bem($root-name, (sub-expand, item-expand, sub-icon, item-icon)) {
      font-size: calc(fn.use-var(menu-height, $size) / 2);
      width: calc(fn.use-var(menu-height, $size) / 2);
      height: calc(fn.use-var(menu-height, $size) / 2);
    }
  }

  @include m.is(collapsed) {
    @include m.bem($root-name, (item, sub)) {
      width: 100%;
    }
  }
}
