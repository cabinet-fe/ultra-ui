@use '../../styles/mixins' as m;
@use '../../styles/functions' as fn;
@use '../../styles/vars';
@use 'sass:map';
@use 'sass:list';

$root-name: tabs;

@mixin position($p, $e: ()) {
  @include m.m($p...) {
    @if (list.length($e) > 0) {
      @include m.bem($root-name, $e) {
        @content;
      }
    } @else {
      @content;
    }
  }
}

@include m.b($root-name) {
  display: flex;

  @include m.e(header) {
    position: relative;
    flex-shrink: 0;
  }

  @include m.e(content) {
    flex-grow: 1;
  }

  @include m.e(header-item) {
    cursor: pointer;
    font-weight: 600;
    letter-spacing: 1px;
    color: fn.use-var(text-color, main);
    user-select: none;
    transition: background-color 0.25s;

    @include m.flex;

    @include m.is(disabled) {
      color: fn.use-var(text-color, disabled);
      cursor: not-allowed;
    }

    @include m.is(active) {
      color: fn.use-var(color, primary);
      background-color: fn.use-var(color, primary, light-9);
    }
  }

  @include m.e(marker) {
    position: absolute;
    background-color: fn.use-var(color, primary);
    transition-duration: 0.25s;
    transition-timing-function: cubic-bezier(0.35, 0, 0.25, 1);
  }

  @include m.e(close) {
    width: 0;
    transition: width 0.25s;
    margin-left: fn.use-var(gap, small);
  }

  @include m.e(close-placeholder) {
    height: 1em;
    width: 1em;
    margin-left: fn.use-var(gap, small);
  }

  @include position((top, bottom), header) {
    @include m.flex;
  }

  @include position((top, bottom), marker) {
    height: 2px;
    left: 0;
    transition-property: transform, width;
  }
  // 位置上
  @include position(top) {
    flex-direction: column;
  }
  @include position(top, header) {
    border-bottom: fn.use-var(border);
  }
  @include position(top, marker) {
    bottom: 0;
  }
  @include position(top, header-item) {
    border-radius: fn.use-var(radius, large) fn.use-var(radius, large) 0 0;
  }

  // 位置下
  @include position(bottom) {
    flex-direction: column-reverse;
  }
  @include position(bottom, header) {
    border-top: fn.use-var(border);
  }
  @include position(bottom, marker) {
    top: 0;
  }
  @include position(bottom, header-item) {
    border-radius: 0 0 fn.use-var(radius, large) fn.use-var(radius, large);
  }

  @include position((left, right), content) {
    height: 100%;
  }

  @include position((left, right), marker) {
    width: 2px;
    top: 0;
    transition-property: transform, height;
  }

  // 位置左
  @include position(left, header) {
    border-right: fn.use-var(border);
  }
  @include position(left, marker) {
    right: 0;
  }
  @include position(left, header-item) {
    border-radius: fn.use-var(radius, large) 0 0 fn.use-var(radius, large);
    justify-content: flex-end;
  }

  // 位置右
  @include position(right) {
    flex-direction: row-reverse;
  }
  @include position(right, header) {
    border-left: fn.use-var(border);
  }
  @include position(right, marker) {
    left: 0;
  }
  @include position(right, header-item) {
    border-radius: 0 fn.use-var(radius, large) fn.use-var(radius, large) 0;
  }

  // 尺寸
  @include m.size using ($size) {
    @include m.bem($root-name, header-item) {
      height: fn.use-var(form-component-height, $size);
      padding: 0 fn.use-var(gap, $size);

      @include m.is(active) {
        @include m.bem($root-name, close) {
          width: fn.use-var(font-size-main, $size);
        }
      }

      &:hover {
        @include m.bem($root-name, close) {
          width: fn.use-var(font-size-main, $size);
        }
      }
    }
  }

  @include m.m(left, right) {
    @include m.bem($root-name, close) {
      width: auto;
    }
  }

  @include m.e(content) {
    width: 100%;
    border-radius: fn.use-var(radius, default);
  }
}
