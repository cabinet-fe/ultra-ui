@use '../../styles/mixins' as m;
@use '../../styles/functions' as fn;
@use '../../styles/vars';
@use 'sass:map';

// 方便拼接
$root-name: message;

@include m.b($root-name) {
  display: flex;
  min-width: 380px;
  position: fixed;
  left: 50%;
  top: 20px;
  transform: translateX(-50%);
  transition:
    opacity 0.3s,
    transform 0.4s,
    top 0.4s;
  border: fn.use-var(border);

  @include m.size using ($size) {
    border-radius: fn.use-var(radius, $size);
    font-size: fn.use-var('font-size', title, $size);
    padding: map.get(vars.$gap, $size) * 2;

    @include m.bem($root-name, icon) {}

    @include m.bem($root-name, content) {
      max-width: 400px;
      word-wrap: break-word;
      margin-left: fn.use-var(gap, $size);
      margin-right: map.get(vars.$gap, $size) + 12;
    }

    @include m.bem($root-name, close) {
      cursor: pointer;
      position: absolute;
      right: fn.use-var(gap, $size);
      top: fn.use-var(gap, $size);

      &:hover {
        color: fn.use-var(color, primary, 'dark-9');
      }
    }
  }

  @each $type, $_ in vars.$color-types {
    @include m.e($type) {
      background-color: fn.use-var(color, $type, 'light-7');
      color: fn.use-var(color, $type);
    }
  }
}

.#{$root-name}-fade-enter-from,
.#{$root-name}-fade-leave-to {
  opacity: 0;
  transform: translate(-50%, -100%);
}