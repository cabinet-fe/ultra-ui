@use '../../styles/mixins' as m;
@use '../../styles/functions' as fn;
@use '../../styles/vars';
@use 'sass:map';

$root-name: tag;
@include m.b($root-name) {
  cursor: default;
  color: fn.use-var(text-color, main);
  background-color: fn.use-var(color, default);
  overflow: hidden;
  min-width: 0;
  @include m.flex(inline-flex, flex-start, center);

  @include m.e(content) {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    flex-grow: 1;
  }

  @include m.e(icon-close) {
    cursor: pointer;
    flex-shrink: 0;
    border-radius: 50%;
  }

  @include m.size using ($size) {
    height: fn.use-var(tag, $size);
    font-size: fn.use-var(font-size-main, $size);
    padding: 0 fn.use-var(gap, $size);
    border-radius: fn.use-var(radius, $size);

    @include m.bem($root-name, icon-close) {
      margin-left: calc(fn.use-var(gap, $size) / 2);
    }

    @include m.is(round) {
      border-radius: calc(fn.use-var(tag, $size) / 2);
    }
  }

  // 颜色样式
  @each $type in vars.$color-types {
    @include m.m(color-#{$type}) {
      color: fn.use-var(color, $type);
      background-color: fn.use-var(color, $type, light-9);

      @include m.is(dark) {
        color: fn.use-var(text-color, white);
        background-color: fn.use-var(color, $type);
      }

      @include m.bem($root-name, icon-close) {
        &:hover {
          border: 1px solid fn.use-var(color, $type);
          // background-color: #ddd;
        }
      }
    }
  }
}
