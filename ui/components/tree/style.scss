@use '../../styles/mixins' as m;
@use '../../styles/functions' as fn;

$root-name: tree;

@include m.b($root-name) {
  @include m.size using ($size) {
    @include m.bem($root-name, node) {
    }

    @include m.bem($root-name, node-content) {
      border-radius: fn.use-var(radius, $size);
      padding: calc(fn.use-var(gap, $size) / 2) fn.use-var(gap, $size);
      min-height: fn.use-var(form-component-height, $size);
    }
  }

  @include m.e(wrap) {
    @include m.is(virtual) {
      position: relative;

      @include m.bem($root-name, node) {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
      }
    }
  }

  @include m.is(selectable, checkable) {
    @include m.bem($root-name, node) {
      &:not(.is-disabled) {
        @include m.bem($root-name, node-content) {
          &:hover {
            background-color: fn.use-var(color, primary, light-9);
          }
        }
      }
    }
  }

  @include m.e(node) {
    cursor: pointer;
    @include m.flex($align: center);

    @include m.is(selected) {
      @include m.bem($root-name, node-content) {
        background-color: fn.use-var(color, primary, light-3) !important;
        color: fn.use-var(text-color, white);
      }
    }

    @include m.is(expanded) {
      @include m.bem($root-name, expand-icon) {
        transform: rotate(90deg);
      }
    }

    @include m.is(disabled) {
      cursor: not-allowed;
      @include m.bem($root-name, node-content) {
        color: fn.use-var(text-color, disabled);
      }
    }
  }

  @include m.e(expand-icon, icon-placeholder) {
    flex-shrink: 0;
  }

  @include m.e(expand-icon) {
    cursor: pointer;
    transition: transform 0.2s;
    flex-shrink: 0;
    font-size: 18px;
  }

  @include m.e(icon-placeholder) {
    width: 18px;
    height: 18px;
    padding: 4px;

    &::before {
      content: '';
      box-sizing: border-box;
      width: 100%;
      height: 100%;
      display: block;
      border-radius: 50%;
      border: 2px solid fn.use-var(text-color, main);
    }
  }

  @include m.e(node-content) {
    flex-grow: 1;
    overflow: hidden;
    user-select: none;
    word-break: break-all;
    transition: background-color 0.25s;
    @include m.flex($align: center, $wrap: wrap);
  }

  @include m.e(ripple) {
    background-color: fn.use-var(color, primary, light-7);
    opacity: 0.5;
  }

  @include m.e(empty) {
    text-align: center;
  }
}
