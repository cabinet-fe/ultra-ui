@use 'vars';
@use 'sass:list';
@use 'sass:map';
@use 'functions' as fn;

/** flex布局 */
@mixin flex(
  $display: flex,
  $justify: flex-start,
  $align: center,
  $wrap: nowrap
) {
  display: $display;
  justify-content: $justify;
  align-items: $align;
  align-content: $align;
  flex-wrap: $wrap;
}

/*
* 组件尺寸
* 参数为生效的form-size属性, 目前有height和padding
* 例如:
* 使用$form-component-sizes中的属性, 表示使用表单组件中的sizes
* @include component-size(height, padding, font-size)
*/
@mixin component-size($sizes) {
  @each $size, $size-types in $sizes {
    &--#{$size} {
      @content ($size, $size-types);
    }
  }
}

@mixin b($blocks...) {
  @each $block in $blocks {
    .#{vars.$namespace}#{$block} {
      @content;
    }
  }
}

@mixin e($elements...) {
  @each $element in $elements {
    &__#{$element} {
      @content;
    }
  }
}

@mixin m($modifiers) {
  @each $modifier in $modifiers {
    &--#{$modifier} {
      @content;
    }
  }
}

@mixin is($types...) {
  @each $type in $types {
    &.is-#{$type} {
      @content;
    }
  }
}

/**
* 设置css变量
* 参数1:变量前缀
* 参数2: 一个由值组成的列表或者由key, value组成的map
* css-var(height, (
*   large: 40px
*   default: 32px
*   small: 24px
* ))
* 生成的css变量:
* --u-height-large: 40px;
* --u-height-default: 32px;
* --u-height-small: 24px;
*/
@mixin css-var($prefix, $list) {
  @each $type, $value in $list {
    @if $value == null {
      --#{vars.$namespace}#{$prefix}: #{$type};
    } @else {
      --#{vars.$namespace}#{$prefix}-#{$type}: #{$value};
    }
  }
}

// 这是一个混合宏，用于生成表单组件样式
@mixin form-component {
  // 使用变量 radius 设置边框半径
  border-radius: fn.use-var(radius);
  // 使用变量 border 和 color 设置内阴影和边框颜色
  box-shadow: inset 0 0 1px 1px fn.use-var(border, color);
  // 设置过渡效果
  transition: box-shadow 0.25s ease;
  // 设置左右边距
  padding: 0 4px;

  // 鼠标悬停时的样式
  &:hover {
    // 使用变量 color 和 primary 设置内阴影和边框颜色
    box-shadow: inset 0 0 1px 1px fn.use-var(color, primary);
  }

  // 遍历 vars.$sizes 中的每个键和值
  @each $size-name, $size-types in vars.$form-component-sizes {
    // 根据 $size-name 动态生成类名，并设置高度
    &--#{$size-name} {
      height: map.get($size-types, height);
    }

    // 在 e(native) 上下文中应用样式
    @include e(native) {
      // 设置高度为100%和主要字体大小
      height: 100%;
      font-size: fn.use-var(font-size, main);
    }
  }

  // 在 e(native) 上下文中应用样式
  @include e(native) {
    // 清除默认样式
    outline: none;
    border: none;
    background-color: transparent;
    width: 100%;
    flex-grow: 1;
  }

  // 在 is(focus) 上下文中应用样式
  @include is(focus) {
    // 使用变量 color 和 primary 设置内阴影和边框颜色
    box-shadow: inset 0 0 1px 1px fn.use-var(color, primary);
  }
}
