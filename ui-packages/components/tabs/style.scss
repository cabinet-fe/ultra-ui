@use '@ui/styles/mixins' as m;
@use '@ui/styles/functions' as fn;
@use '@ui/styles/vars';

@include m.b(tabs) {
  display: flex;
  @each $position in top, left, right, bottom {
    @include m.e($position) {
      @if $position == top {
        flex-direction: column;
      } @else if $position == bottom {
        flex-direction: column-reverse;
      } @else if $position == left {
        flex-direction: row;
      } @else if $position == right {
        flex-direction: row-reverse;
      }
    }
  }
  @include m.e(header) {
    display: flex;
    @each $position in top, left, right, bottom {
      &--#{$position} {
        @if $position == left {
          flex-direction: column;
          border-right: 2px solid fn.use-var(border-color);
          margin-right: 10px;
        } @else if $position == right {
          flex-direction: column;
          border-left: 2px solid fn.use-var(border-color);
          margin-left: 10px;
        } @else if $position == bottom {
          border-bottom: 2px solid fn.use-var(border-color);
          margin-top: 10px;
        } @else {
          border-bottom: 2px solid fn.use-var(border-color);
          margin-bottom: 10px;
        }
      }
    }
    &--label {
      display: flex;
      align-items: center;
      justify-content: space-around;
      cursor: pointer;

      // border-right: 0;
      background-color: fn.use-var(bg-color, top);
      padding: 4px 8px;
      font-size: fn.use-var(font-size, title);
      color: fn.use-var(color, info);
      margin-bottom: -1px;
      @include m.is('active') {
        color: fn.use-var(color, primary);
        border-bottom: 2px solid fn.use-var(color, primary);
      }
    }
    // &--label:last-of-type {
    //   border-right: fn.use-var(border);
    // }
    &--label:hover {
      color: fn.use-var(color, primary);
    }
  }
  @include m.e(content) {
    width: 100%;
    border: 1px solid gray;
  }
}
