@use 'sass:map';
@use '@ui/styles/mixins' as m;
@use '@ui/styles/vars';
@use '@ui/styles/functions' as fn;

@include m.b(button) {
  @include m.flex($display: inline-flex, $justify: center);

  line-height: 1;
  outline: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  background-color: #fff; // CSS_VAR
  border: fn.use-var(border);
  border-radius: fn.use-var(radius);
  cursor: pointer;
  -webkit-appearance: none;

  // 尺寸
  @include m.form-size(height, padding, font-size) using ($size, $types) {
    @include m.is(circle) {
      width: map.get($types, height);
    }
  }

  // 颜色
  @each $type, $_ in vars.$color-types {
    @include m.m($type) {
      background-color: fn.use-var(color, $type);
      color: #fff; // CSS_VAR
      border-color: fn.use-var(color, $type);

      @include m.is(ghost) {
      }

      &:hover {
        background-color: fn.use-var(color, $type, 'dark-1');
        border-color: fn.use-var(color, $type, 'dark-1');
      }

      // 禁用
      @include m.is(disabled) {
        background-color: fn.use-var(color, $type, 'light-3');
        border-color: fn.use-var(color, $type, 'light-3');
      }
    }
  }

  // 圆角
  @include m.is(circle) {
    border-radius: 50%;
    padding: 0;
  }

  // 禁用
  @include m.is(disabled) {
    cursor: not-allowed;
  }

  @include m.e(icon-left) {
    margin-right: fn.use-var(gap-small);
  }
  @include m.e(icon-right) {
    margin-left: fn.use-var(gap-small);
  }
}
