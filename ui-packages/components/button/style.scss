@use 'sass:map';
@use '@ui/styles/mixins' as m;
@use '@ui/styles/vars';
@use '@ui/styles/functions' as fn;

@include m.b(button) {
  @include m.flex($display: inline-flex, $justify: center);

  line-height: 1;
  outline: none;
  text-decoration: none;
  white-space: nowrap;
  vertical-align: middle;
  border-radius: fn.use-var(radius, default);
  cursor: pointer;
  -webkit-appearance: none;
  background-color: fn.use-var(bg-color, top);
  border: fn.use-var(border);
  transition: background-color 0.25s, box-shadow .25s;

  & + & {
    margin-left: fn.use-var(gap, small);
  }

  // 尺寸
  @include m.component-size(vars.$form-component-sizes) using ($size, $types) {
    @each $type, $val in $types {
      #{$type}: $val;
    }
    @include m.is(circle) {
      width: map.get($types, height);
    }
  }

  @include m.is(disabled, loading) {
    cursor: not-allowed;
    color: fn.use-var(text-color, second);
  }

  // 颜色
  @each $type, $_ in vars.$color-types {
    // 用于指定波纹颜色
    .is-ripple-#{$type} {
      background-color: fn.use-var(color, $type);
      opacity: 0.2;
    }

    @include m.m($type) {
      background-color: fn.use-var(color, $type);
      color: #fff; // CSS_VAR
      border-color: fn.use-var(color, $type);
      box-shadow: 0px 0px 2px 0px fn.use-var(color, $type);
      &:hover {
        background-color: fn.use-var(color, $type, 'dark-1');
        border-color: fn.use-var(color, $type, 'dark-1');
        box-shadow: 0px 0px 3px 1px fn.use-var(color, $type);
      }

      &:active {
        box-shadow: none!important;
      }

      // 禁用
      @include m.is(disabled, loading) {
        background-color: fn.use-var(color, $type, 'light-3');
        border-color: fn.use-var(color, $type, 'light-3');
        color: #fff;
        box-shadow: none;
      }

      @include m.is(text) {
        color: fn.use-var(color, $type);
        box-shadow: none;

        &:not(.is-disabled)  {
          &:hover {
            background-color: fn.use-var(color, $type, 'light-9');
          }
        }

        @include m.is(disabled) {
          color: fn.use-var(color, $type, 'light-3');
        }
      }

      @include m.is(plain) {
        color: fn.use-var(color, $type);
        background-color: fn.use-var(bg-color, top);


        &:hover {
          color: fn.use-var(color, $type, 'dark-1');
          border-color: fn.use-var(color, $type, 'dark-1');
        }

        &.is-disabled {
          border-color: fn.use-var(color, $type, 'light-3');
          color: fn.use-var(color, $type, 'light-3');
        }
      }
    }
  }

  // 圆角
  @include m.is(circle) {
    border-radius: 50%;
    padding: 0;
  }

  // 文本形态
  @include m.is(text) {
    background-color: fn.use-var(bg-color, top);
    border: none;
  }

  @include m.e(icon-left) {
    margin-right: fn.use-var(gap-small);
  }
  @include m.e(icon-right) {
    margin-left: fn.use-var(gap-small);
  }
}
