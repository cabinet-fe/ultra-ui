@use '@ui/styles/mixins' as m;
@use '@ui/styles/functions' as fn;
@use '@ui/styles/vars';



@include m.b(radio) {
    @include m.flex($display: inline-flex, $align: center);
    cursor: pointer;
    height: 30px;
    margin-right: 30px;

    @include m.e(input) {
        margin: 0;
        @include m.flex($display: inline-flex, $align: center);
        input[type="radio"]{
            background-color: fn.use-var(bg-color-top);
        }
    }

    @include m.e(label) {
        padding-left: 8px;
    }

    @include m.e(inner) {
        display: inline-block;
        width: fn.use-var(font-size-main);
        height: fn.use-var(font-size-main);
        border: 1px solid fn.use-var(border-color);
        border-radius: 50%;
        position: relative;

        &::after {
            width: 4px;
            height: 4px;
            border-radius: 100%;
            background-color: fn.use-var(bg-color-top);
            content: "";
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%) scale(0);
            transition: transform .15s ease-in;
        }

        &:hover {
            border: 1px solid fn.use-var(color-primary);
        }
    }

    @include m.is(checked) {
        @include m.bem(radio,inner) {
            border-color: fn.use-var(color-primary);
            background: fn.use-var(color-primary);

            &::after {
                transform: translate(-50%, -50%) scale(1);
            }
        }
    }

    @include m.is(disabled) {
        cursor: not-allowed;
        opacity: 0.8;
        pointer-events: none;
        color: fn.use-var(text-color-second);

        &:hover {
            color: fn.use-var(text-color-second);
        }

        @include m.bem(radio, input) {
            cursor: not-allowed;
            background: none;
            border-color: fn.use-var(text-color-second);

            &::after {
                width: 6px;
                height: 6px;
                background-color: fn.use-var(text-color-second);
            }
        }
    }
}