@use '@ui/styles/mixins' as m;
@use '@ui/styles/functions' as fn;
@use '@ui/styles/vars';

@include m.b(textarea) {
    position: relative;
    display: block;

    @include m.m(more) {
        display: block;
        border: fn.use-var(border);
        border-radius: fn.use-var(radius, default);
        box-shadow: 0 0 0 0.5px fn.use-var(border, color) inset;
        outline: none;
        text-decoration: none;
        margin-bottom: 4px;
        padding: 5px 10px;
        min-height: 30px;
        box-sizing: border-box;
        font-family: fn.use-var(font-family);
        transition: box-shadow 0.2s ease;

        @include m.is(hover) {
            border-color: fn.use-var(color, primary);
            box-shadow: 0 0 0 0.5px fn.use-var(color, primary) inset;
        }

        @include m.is(textarea-disabled) {
            cursor: not-allowed;
            resize: none;
            background-color: #f5f7fa;
            color: fn.use-var(text-color, disabled);
            border-color: fn.use-var(border, color);
            box-shadow: 0 0 0 0.5px fn.use-var(border, color) inset;
        }
    }

    @include m.m(resize-none) {
        resize: none !important;
    }

    @include m.m(resize-vertical) {
        resize: vertical;
    }

    @include m.m(resize-horizontal) {
        resize: horizontal;
    }

    @include m.m(count) {
        display: block;
        position: absolute;
        bottom: 8px;
        right: 4px;
        font-size: 12px;
        background: fn.use-var(bg-color, middle);
    }

    @include m.m(clear) {
        position: absolute;
        top: 50%;
        transform: translateY(-50%);
        right: 8px;
        cursor: pointer;

        i {
            color: fn.use-var(text-color, titlr);
            border-radius: 50%;
            border: fn.use-var(border);
            border-color: fn.use-var(text-color, titlr);
        }
    }

}